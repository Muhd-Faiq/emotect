# Live Firebase
# Variables:
#   -baseUrl: API base URL
#   -API KEY: project API key obtained from Firebase console (website)
#   -accountUrl: base URL for authentication from Firebase
@baseUrl = https://us-central1-emotect-bd3d5.cloudfunctions.net/api 
@API_KEY = AIzaSyA5btcM3ZWO_YtqjfsO4lYfBoOF0faybCA
@accountUrl = https://identitytoolkit.googleapis.com/v1/accounts

# Each consequence request must be included with access token
# Then token is obtained after logging in

@accessToken =eyJhbGciOiJSUzI1NiIsImtpZCI6IjFiYjk2MDVjMzZlOThlMzAxMTdhNjk1MTc1NjkzODY4MzAyMDJiMmQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vZW1vdGVjdC1iZDNkNSIsImF1ZCI6ImVtb3RlY3QtYmQzZDUiLCJhdXRoX3RpbWUiOjE2MjcyMjgwMDMsInVzZXJfaWQiOiI4NFVPWVBlczhGZDZUZEEzYzRIUGdCdm13Z20xIiwic3ViIjoiODRVT1lQZXM4RmQ2VGRBM2M0SFBnQnZtd2dtMSIsImlhdCI6MTYyNzIyODAwMywiZXhwIjoxNjI3MjMxNjAzLCJlbWFpbCI6ImFueXR3b0Bhbnl3aGVyZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsiYW55dHdvQGFueXdoZXJlLmNvbSJdfSwic2lnbl9pbl9wcm92aWRlciI6InBhc3N3b3JkIn19.ETxM7rzhODEhaRZOiC0p4q10OMJ8WZ6aX8F7UQ4J--hWklxQ50dPBz-eBr0-tTaicFzSRZFHEOmy-rfp9U9VUSx-Qrwl2SiCCA_7hyveAsYCJxfnxrS6KEadm7KroQYQHUvXBmhmDXrMjUY27VXsKtN81AZ3ELMGgwLqGSwTkvAWOJdNiCV4P7u8yYJPpWkJi8_YmtrDPaW-bj_YjVSpHbjLn8SPXNp4bLRZGH8KM_c3sE8N_9qLrBfKIEI8BYw0FHbqVu3TbNde9vyuQ9YaaXadPmcVepmcFN4Ldejj20_h2FP5Z5ZxK-wdrm5mNXzvWuHpiLmhB6kXrt43tPo-qw
@userId=replace_with_a_user_id

############################################################################################################
## Request 1: Sign up with email / password
# Accessing the Google Sign up API directly from the clien
# 
# API format:
#    POST https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=[API_KEY]
# 
# Documentation:  https://firebase.google.com/docs/reference/rest/auth

POST {{accountUrl}}:signUp?key={{API_KEY}}
Content-Type: application/json

{
    "email": "jessica2@mockmail.com",
    "password": "abc123",
    "returnSecureToken": true
}

### Request 2 Sign in with email and password
# Accessing the Google Sign in API directly from the clien
# 
# API format:
#     POST https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=[API_KEY]
POST {{accountUrl}}:signInWithPassword?key={{API_KEY}}
Content-Type: application/json

{
    "email": "any3@mockmail.com",
    "password": "abc123",
    "returnSecureToken": true
}
############################################################################################################
POST {{accountUrl}}:signInWithPassword?key={{API_KEY}}
Content-Type: application/json

{
    "email": "jessica2@mockmail.com",
    "password": "abc123",
    "returnSecureToken": true
}


############################################################################################################
# Refactor the signin with Google API, sign in from the backend (with Node JS)

## Request 1: Sign up with email / password  
POST {{baseUrl}}/auths/signup
Content-Type: application/json

{
    "email": "anythree@anywhere.com",
    "password": "abc123",
    "displayName":"anythree"
}

### Request 2 Sign in with email and password
POST {{baseUrl}}/auths/signin
Content-Type: application/json

{
    "email": "anyone@anywhere.com",
    "password": "abc123"
}

### Request 2 Sign in with email and password
POST {{baseUrl}}/auths/signin
Content-Type: application/json

{
    "email": "anytwo@anywhere.com",
    "password": "abc123"
}

### Request 2 Sign in with email and password
POST {{baseUrl}}/auths/signin
Content-Type: application/json

{
    "email": "anythree@anywhere.com",
    "password": "abc123"
}


### Request 3 : Accessing profile for the signed in user
GET {{baseUrl}}/users/{{userId}}
Content-Type: application/json
Authorization: Bearer {{accessToken}}

### Request 4 : Accessing all users. 
# This request should be blocked (in this example of application). The signed-in user
# can only acccess his/her profile, but not the others'
GET {{baseUrl}}/users
Content-Type: application/json
Authorization: Bearer {{accessToken}}

### Request 5 : Accessing the counter info for the signed in user
GET {{baseUrl}}/counters/{{userId}}
Content-Type: application/json
Authorization: Bearer {{accessToken}}

### Request 6 : Update the information of a given counter
PUT {{baseUrl}}/counters/{{userId}}
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
    "user": "user1",
    "counter": 0
}

