# Live Firebase
# Variables:
#   -baseUrl: API base URL
#   -API KEY: project API key obtained from Firebase console (website)
#   -accountUrl: base URL for authentication from Firebase
# @baseUrl = http://localhost:5001/emotect-bd3d5/us-central1/api
@baseUrl = https://us-central1-emotect-bd3d5.cloudfunctions.net/api 
@API_KEY = AIzaSyA5btcM3ZWO_YtqjfsO4lYfBoOF0faybCA
@accountUrl = https://identitytoolkit.googleapis.com/v1/accounts

# Each consequence request must be included with access token
# Then token is obtained after logging in

@accessToken =eyJhbGciOiJSUzI1NiIsImtpZCI6IjFiYjk2MDVjMzZlOThlMzAxMTdhNjk1MTc1NjkzODY4MzAyMDJiMmQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vZW1vdGVjdC1iZDNkNSIsImF1ZCI6ImVtb3RlY3QtYmQzZDUiLCJhdXRoX3RpbWUiOjE2MjcyMjgwMDMsInVzZXJfaWQiOiI4NFVPWVBlczhGZDZUZEEzYzRIUGdCdm13Z20xIiwic3ViIjoiODRVT1lQZXM4RmQ2VGRBM2M0SFBnQnZtd2dtMSIsImlhdCI6MTYyNzIyODAwMywiZXhwIjoxNjI3MjMxNjAzLCJlbWFpbCI6ImFueXR3b0Bhbnl3aGVyZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsiYW55dHdvQGFueXdoZXJlLmNvbSJdfSwic2lnbl9pbl9wcm92aWRlciI6InBhc3N3b3JkIn19.ETxM7rzhODEhaRZOiC0p4q10OMJ8WZ6aX8F7UQ4J--hWklxQ50dPBz-eBr0-tTaicFzSRZFHEOmy-rfp9U9VUSx-Qrwl2SiCCA_7hyveAsYCJxfnxrS6KEadm7KroQYQHUvXBmhmDXrMjUY27VXsKtN81AZ3ELMGgwLqGSwTkvAWOJdNiCV4P7u8yYJPpWkJi8_YmtrDPaW-bj_YjVSpHbjLn8SPXNp4bLRZGH8KM_c3sE8N_9qLrBfKIEI8BYw0FHbqVu3TbNde9vyuQ9YaaXadPmcVepmcFN4Ldejj20_h2FP5Z5ZxK-wdrm5mNXzvWuHpiLmhB6kXrt43tPo-qw
@userId=replace_with_a_user_id

############################################################################################################
## Request 1: Sign up with email / password
# Accessing the Google Sign up API directly from the clien
# 
# API format:
#    POST https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=[API_KEY]
# 
# Documentation:  https://firebase.google.com/docs/reference/rest/auth

POST {{accountUrl}}:signUp?key={{API_KEY}}
Content-Type: application/json

{
    "email": "jessica2@mockmail.com",
    "password": "abc123",
    "returnSecureToken": true
}

### Request 2 Sign in with email and password
# Accessing the Google Sign in API directly from the clien
# 
# API format:
#     POST https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=[API_KEY]
POST {{accountUrl}}:signInWithPassword?key={{API_KEY}}
Content-Type: application/json

{
    "email": "any3@mockmail.com",
    "password": "abc123",
    "returnSecureToken": true
}
############################################################################################################
POST {{accountUrl}}:signInWithPassword?key={{API_KEY}}
Content-Type: application/json

{
    "email": "jessica2@mockmail.com",
    "password": "abc123",
    "returnSecureToken": true
}


############################################################################################################
# Refactor the signin with Google API, sign in from the backend (with Node JS)

## Request 1: Sign up with email / password  
POST {{baseUrl}}/auths/signup
Content-Type: application/json

{
    "email": "anyseven@anywhere.com",
    "password": "abc123",
    "displayName":"anythree"
}

### Request 2 Sign in with email and password
POST {{baseUrl}}/auths/signin
Content-Type: application/json

{
    "email": "anyone@anywhere.com",
    "password": "abc123"
}

### Request 2 Sign in with email and password
POST {{baseUrl}}/auths/signin
Content-Type: application/json

{
    "email": "logi@gmail.com",
    "password": "logi1234"
}

### Request 2 Sign in with email and password
POST {{baseUrl}}/auths/signin
Content-Type: application/json

{
    "email": "faiq@gmail.com",
    "password": "faiq123"
}

### Request 2 Sign in with email and password
POST {{baseUrl}}/auths/signin
Content-Type: application/json

{
    "email": "haris@gmail.com",
    "password": "haris1234"
}

### Request 3 : Accessing profile for the signed in user
POST {{baseUrl}}/users/9yoOzbuDF9PuJAp7tCl5IycY30I3
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjJlMzZhMWNiZDBiMjE2NjYxOTViZGIxZGZhMDFiNGNkYjAwNzg3OWQiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW55dGhyZWUiLCJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vZW1vdGVjdC1iZDNkNSIsImF1ZCI6ImVtb3RlY3QtYmQzZDUiLCJhdXRoX3RpbWUiOjE2Mzc1NTY5ODAsInVzZXJfaWQiOiJxdUVycVExVnAyZGZSVnJ1d1lRMmVJU0xVRUgyIiwic3ViIjoicXVFcnFRMVZwMmRmUlZydXdZUTJlSVNMVUVIMiIsImlhdCI6MTYzNzU1Njk4MCwiZXhwIjoxNjM3NTYwNTgwLCJlbWFpbCI6ImFueXNldmVuQGFueXdoZXJlLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJhbnlzZXZlbkBhbnl3aGVyZS5jb20iXX0sInNpZ25faW5fcHJvdmlkZXIiOiJwYXNzd29yZCJ9fQ.R8Hu190DSu2CzXUJOTKKQ0nKthRsdEfvdGHsViz17pi7rVHQeURDRyeHFuKLPXiykQJ4aEGBaDPY_p8EghRAus_vpriJ-riOkI64VF_W2X3hRWRnenobhsWe2CWESb_rbMOH857mShsGgSuRUTSNyvgysjVWnIo4n7_FXZVJQcPLs1Y4_MnI-AS4IsESQop5hEmzG9yy31oLvwETjroKRX2cO3DsT1jo70OdO8X5yc-FyGROGvYo3CFmUhMaDM1jwSI6pga19nSnTQwntgZIO8UBCPlEO9QcFMntu-7KokhyhBQyU-ZkajaRQGt22uDqP046wDFnn_Pk9G_XqhBERg

{
    "email": "anyseven@anywhere.com",
    "password": "abc123"
}


### Request 3 : Accessing profile for the signed in user
GET {{baseUrl}}/users/5qaeP0OQCpapwRBvz8ku7LmhLpH3
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6Ijk1NmMwNDEwZmE1MjFjMTZlNDQ2NWE4ZjVjODU5NjZhNWY1MDk5NGIiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiaGFyaXMiLCJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vZW1vdGVjdC1iZDNkNSIsImF1ZCI6ImVtb3RlY3QtYmQzZDUiLCJhdXRoX3RpbWUiOjE2Mzk2MTgyNDYsInVzZXJfaWQiOiI1cWFlUDBPUUNwYXB3UkJ2ejhrdTdMbWhMcEgzIiwic3ViIjoiNXFhZVAwT1FDcGFwd1JCdno4a3U3TG1oTHBIMyIsImlhdCI6MTYzOTYxODI0NiwiZXhwIjoxNjM5NjIxODQ2LCJlbWFpbCI6ImhhcmlzQGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoYXJpc0BnbWFpbC5jb20iXX0sInNpZ25faW5fcHJvdmlkZXIiOiJwYXNzd29yZCJ9fQ.Af82hNsuTRvyHUiJ_YhadrSd5zSbxivpLp9oUYOH1moRtxA9VAidH1gxvgkChQagi_e1QybWX5iiSMhMd3JJ14Ay2o_cCg88jGCLtg5GBvgJ-p6QeW-vGVRYrCzqiR27leq4RQSNUprEd4vNT4YCx3fVygQwa3J-EY9NgD1o_HblZe--g1eGFmClDxUHQEoYdVZcoTehJ8HYssglavXSZ3TxssI7F7oiXkvd_r1JBYjyqIMjI-ie2r0zlA3xmKSfd0f2KWiyIN5j5wEFpDl1VRBau5X-nI-HCP2KxUyh4Gq_DhiZermdAhT6AY2RqSYBkB2jewtl_QGy-a0bfNopAQ

### Request 4 : Accessing all users. 
# This request should be blocked (in this example of application). The signed-in user
# can only acccess his/her profile, but not the others'
GET {{baseUrl}}/users
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6Ijk1NmMwNDEwZmE1MjFjMTZlNDQ2NWE4ZjVjODU5NjZhNWY1MDk5NGIiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiZmFpcSIsImFkbWluIjp0cnVlLCJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vZW1vdGVjdC1iZDNkNSIsImF1ZCI6ImVtb3RlY3QtYmQzZDUiLCJhdXRoX3RpbWUiOjE2Mzk2MTkwMzksInVzZXJfaWQiOiJRSGJqQnNhTW5iVWVPYXVFaDBhNGEzM3dKSjYyIiwic3ViIjoiUUhiakJzYU1uYlVlT2F1RWgwYTRhMzN3Sko2MiIsImlhdCI6MTYzOTYxOTAzOSwiZXhwIjoxNjM5NjIyNjM5LCJlbWFpbCI6ImZhaXFAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJmaXJlYmFzZSI6eyJpZGVudGl0aWVzIjp7ImVtYWlsIjpbImZhaXFAZ21haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.ct6u88-oD2zs45_em4afdlE-REF7SBqvQzg_C0cr8C6j8IPFXO4xZfvLs9MBSoQ9NiFYaHtLSCCeY7R3r_xON_NcSYGnn71Hq1ZznUolyZCMmollN2_kHxeFRovYVCV-MEbw5d3Exxr01yBF_gGDvhyFkgsfkUAfzbTLpwo6XBt3eVxHNDQArwr6Ir0iDite2kYsF9rmr9gg8EqIplXu8n2KIreOskp8Qw4mnRp2g_ZMAcE7dGUOCMlvE7CVEqBDNe9S229t2_R246BSYZi-G3sN-qH7M1JUzNMfe1CwF5Q325v92ra7mytsaCa9PhabYZF4XgBbAqDHxm2XMzUiyQ

### Request 5 : Accessing the counter info for the signed in user
GET {{baseUrl}}/counters/{{userId}}
Content-Type: application/json
Authorization: Bearer {{accessToken}}

### Request 6 : Update the information of a given counter
PUT {{baseUrl}}/counters/{{userId}}
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
    "user": "user1",
    "counter": 0
}

